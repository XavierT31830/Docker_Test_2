
# Image de base
FROM debian:jessie

# Installation de curl avec apt-get
RUN apt-get update \
&& apt-get install -y curl \
# ... remove de l'archive après installation
&& rm -rf /var/lib/apt/lists/*

# Installation de Node.js à partir du site officiel (version v0.12.5 fonctionnelle pour l'exercice)
RUN curl -LO "https://nodejs.org/dist/v0.12.5/node-v0.12.5-linux-x64.tar.gz" \
&& tar -xzf node-v0.12.5-linux-x64.tar.gz -C /usr/local --strip-components=1 \
# ... remove de l'archive après installation
&& rm node-v0.12.5-linux-x64.tar.gz

# Ajout du fichier de dépendances package.json au besoin (vide ici)
ADD package.json /app/

# Changement du repertoire courant
WORKDIR /app

# Installation des dépendances (au besoin, commenté pour pas générer d'erreur)
  # RUN npm install

# Ajout des sources
ADD . /app/

# On expose le port 3000
EXPOSE 3000

# On partage un dossier de log
VOLUME /app/log

# On lance le serveur quand on démarre le conteneur
CMD node server.js



# Commande pour build cette image :
  # docker build -t fullstack-js .

  # -t : permet de nommer votre image docker
  # . : est le repertoire où se trouve le Dockerfile, dans notre cas le dossier courant



# Commande pour lancer ensuite le conteneur :
  # docker run -d -p 3000:3000 -v ${pwd}/log:/app/log fullstack-js

  # -d : lancer le conteneur en tâche de fond,
  # -p 3000:3000 : permet de partager le port de notre machine avec le port du conteneur